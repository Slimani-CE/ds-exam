# Docker Compose Of the Application and Databases
# Version: 1.0

services:
  # Resource Service Configuration
  ## Resource Service Database Configuration
  resource_db:
    image: mariadb:10.6
    container_name: resource_db
    restart: always
    volumes:
      resource_db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: resource_db
      MYSQL_USER: slimani
      MYSQL_PASSWORD: password
    ports:
      - 3306:3306
    expose:
      - 3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  ## Resource Service Application Configuration
  resource-service:
    image: resource-service
    container_name: resource-service
    restart: always
    ports:
      - 8081:8081
    expose:
      - 8081
    depends_on:
      - resource_db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Reservation Service Configuration
  ## Reservation Service Database Configuration
  reservation_db:
    image: mariadb:10.6
    container_name: reservation_db
    restart: always
    volumes:
      reservation_db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: reservation_db
      MYSQL_USER: slimani
      MYSQL_PASSWORD: password
    ports:
      - 3307:3306
    expose:
      - 3307
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  ## Resource Service Application Configuration
  reservation-service:
    image: reservation-service
    container_name: reservation-service
    restart: always
    ports:
      - 8082:8082
    expose:
      - 8082
    depends_on:
      - reservation_db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Gateway Service Configuration
  gateway-service:
    image: gateway-service
    container_name: gateway-service
    restart: always
    ports:
      - 9999:9999
    expose:
      - 9999
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9999/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Consul Service Configuration
  consul-server:
    image: hashicorp/consul:1.11.2
    container_name: consul-server
    restart: always
    volumes:
      - ./server.json:/consul/config/server.json:ro
      - ./certs/:/consul/config/certs/:ro
    networks:
      - consul
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "agent -bootstrap-expect=3"

volumes:
  resource_db:
  reservation_db:

